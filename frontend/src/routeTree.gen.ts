/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ScheduleRouteImport } from './routes/schedule'
import { Route as AppointmentsRouteImport } from './routes/appointments'
import { Route as IndexRouteImport } from './routes/index'

const ScheduleRoute = ScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const AppointmentsRoute = AppointmentsRouteImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/schedule': typeof ScheduleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/schedule': typeof ScheduleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/schedule': typeof ScheduleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/appointments' | '/schedule'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/appointments' | '/schedule'
  id: '__root__' | '/' | '/appointments' | '/schedule'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppointmentsRoute: typeof AppointmentsRoute
  ScheduleRoute: typeof ScheduleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/schedule': {
      id: '/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/appointments': {
      id: '/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppointmentsRoute: AppointmentsRoute,
  ScheduleRoute: ScheduleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
